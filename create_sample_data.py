import os
import cv2
import numpy as np
from PIL import Image, ImageDraw, ImageFont
import base64

def create_sample_images():
    """T·∫°o c√°c h√¨nh ·∫£nh m·∫´u cho test"""
    
    # T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a c√≥
    os.makedirs("data/vid", exist_ok=True)
    
    # 1. H√¨nh ·∫£nh v·ªÅ AI
    img1 = Image.new('RGB', (400, 300), color='white')
    draw = ImageDraw.Draw(img1)
    draw.text((50, 50), "AI & Machine Learning", fill='black')
    draw.text((50, 100), "Artificial Intelligence", fill='blue')
    draw.text((50, 150), "Deep Learning", fill='green')
    draw.text((50, 200), "Neural Networks", fill='red')
    img1.save("data/vid/ai_ml.jpg")
    
    # 2. H√¨nh ·∫£nh v·ªÅ Blockchain
    img2 = Image.new('RGB', (400, 300), color='lightblue')
    draw = ImageDraw.Draw(img2)
    draw.text((50, 50), "Blockchain Technology", fill='black')
    draw.text((50, 100), "Bitcoin", fill='orange')
    draw.text((50, 150), "Ethereum", fill='purple')
    draw.text((50, 200), "Smart Contracts", fill='darkgreen')
    img2.save("data/vid/blockchain.jpg")
    
    # 3. H√¨nh ·∫£nh v·ªÅ IoT
    img3 = Image.new('RGB', (400, 300), color='lightgreen')
    draw = ImageDraw.Draw(img3)
    draw.text((50, 50), "IoT & Smart City", fill='black')
    draw.text((50, 100), "Internet of Things", fill='darkblue')
    draw.text((50, 150), "Smart Sensors", fill='darkred')
    draw.text((50, 200), "Connected Devices", fill='darkgreen')
    img3.save("data/vid/iot_smartcity.jpg")
    
    # 4. H√¨nh ·∫£nh v·ªÅ Data Science
    img4 = Image.new('RGB', (400, 300), color='lightyellow')
    draw = ImageDraw.Draw(img4)
    draw.text((50, 50), "Data Science", fill='black')
    draw.text((50, 100), "Big Data Analytics", fill='purple')
    draw.text((50, 150), "Machine Learning", fill='blue')
    draw.text((50, 200), "Predictive Analytics", fill='green')
    img4.save("data/vid/data_science.jpg")
    
    print("‚úÖ ƒê√£ t·∫°o 4 h√¨nh ·∫£nh m·∫´u")

def create_sample_video():
    """T·∫°o video m·∫´u"""
    
    # T·∫°o video v·ªÅ AI
    fourcc = cv2.VideoWriter_fourcc(*'mp4v')
    out = cv2.VideoWriter('data/vid/ai_demo.mp4', fourcc, 1.0, (400, 300))
    
    for i in range(30):  # 30 frames = 30 gi√¢y
        # T·∫°o frame v·ªõi text kh√°c nhau
        frame = np.ones((300, 400, 3), dtype=np.uint8) * 255
        
        # Th√™m text
        cv2.putText(frame, f"AI Demo Frame {i+1}", (50, 50), 
                   cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)
        cv2.putText(frame, "Artificial Intelligence", (50, 100), 
                   cv2.FONT_HERSHEY_SIMPLEX, 0.7, (255, 0, 0), 2)
        cv2.putText(frame, "Machine Learning", (50, 150), 
                   cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)
        cv2.putText(frame, "Deep Learning", (50, 200), 
                   cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 0, 255), 2)
        
        out.write(frame)
    
    out.release()
    print("‚úÖ ƒê√£ t·∫°o video m·∫´u ai_demo.mp4")

def create_audio_sample():
    """T·∫°o file audio m·∫´u (placeholder)"""
    # T·∫°o file text ƒë·ªÉ ƒë·∫°i di·ªán cho audio
    audio_content = """
    ƒê√¢y l√† file audio m·∫´u v·ªÅ c√¥ng ngh·ªá AI.
    Tr√≠ tu·ªá nh√¢n t·∫°o ƒëang thay ƒë·ªïi th·∫ø gi·ªõi.
    Machine learning v√† deep learning l√† nh·ªØng c√¥ng ngh·ªá quan tr·ªçng.
    Vi·ªát Nam ƒëang ph√°t tri·ªÉn m·∫°nh m·∫Ω trong lƒ©nh v·ª±c AI.
    """
    
    with open("data/audio/audio_sample.txt", "w", encoding="utf-8") as f:
        f.write(audio_content)
    
    print("‚úÖ ƒê√£ t·∫°o file audio m·∫´u (text format)")

if __name__ == "__main__":
    print("üé¨ ƒêang t·∫°o d·ªØ li·ªáu m·∫´u...")
    
    # T·∫°o c√°c th∆∞ m·ª•c c·∫ßn thi·∫øt
    os.makedirs("data/text", exist_ok=True)
    os.makedirs("data/vid", exist_ok=True)
    os.makedirs("data/audio", exist_ok=True)
    
    # T·∫°o d·ªØ li·ªáu m·∫´u
    create_sample_images()
    create_sample_video()
    create_audio_sample()
    
    print("üéâ Ho√†n th√†nh t·∫°o d·ªØ li·ªáu m·∫´u!")
    print("\nüìÅ C·∫•u tr√∫c d·ªØ li·ªáu:")
    print("data/text/ - Ch·ª©a c√°c file text")
    print("data/vid/ - Ch·ª©a h√¨nh ·∫£nh v√† video")
    print("data/audio/ - Ch·ª©a file audio") 